apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule #CRD, Prometheus Operator takes this resource and tells Prometheus to reload the alert rules.
metadata:
  name: main-rules
  namespace: monitoring
  labels: #Helps Prometheus Operator to pick up this rule autometically. Prometheus will match based upon below labels and add the PrometheusRule to its config.
    app: kube-prometheus-stack 
    release: monitoring
spec:
  groups:
  - name: main.rules #name of group, can group our rules
    rules: #array, allows us to create multiple alerts in same object.
    - alert: HostHighCpuLoad #If Actual cpu utilization > 50%, send alert.
      expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 50 # If Actual cpu utilization > 50%, send alert.
      for: 2m #wait for 2 mins, if node utlization does not come down <50% in 2m then send alert.
      labels:
        severity: warning
        namespace: monitoring
      annotations:
        description: "CPU load on host is over 50%\n Value = {{ $value }}\n Instance = {{ $labels.instance }}\n"
        summary: "Host CPU load high"
    - alert: KubernetesPodCrashLooping 
      expr: kube_pod_container_status_restarts_total > 5 #If container is started more than 5 times. how many times container is restarted.
      for: 0m
      labels:
        severity: critical
        namespace: monitoring
      annotations: 
        description: "Pod {{ $labels.pod }} is crash looping\n Value = {{ $value }}" #Label & value from PromQL.
        summary: "Kubernetes pod crash looping"